version: 2.1
orbs:
  node: circleci/node@4.7.0
  aws-cli: circleci/aws-cli@2.0.3
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  udagram-api:
    docker:
      - image: "cimg/base:stable" 
    steps:
      - node/install:
          # a node version that work with the udagram-api
          node-version: 12.22.5
          npm-version: 6.14.8
      - checkout
      - aws-cli/install
      - eb/setup
      - run:
          # install npm dependencies and building the app
          name: build server
          command: |
            npm run install:server
            npm run build:server
      - run: 
          name: Elastic Beanstalk Server
          # copying the Archive.zip file after the build to s3 bucket
          # creating new elasticbeanstalk version with new files
          # updating the ebenvironment
          command: |
            aws s3 cp ./udagram-api/www/Archive.zip s3://udagram-api
            aws elasticbeanstalk create-application-version --application-name 	udagram-api --version-label <<pipeline.git.revision>> --source-bundle S3Bucket="udagram-api",S3Key="Archive.zip"
            aws elasticbeanstalk update-environment --application-name udagram-api --environment-name Udagramapi-env --version-label <<pipeline.git.revision>>
  udagram-frontend:
    docker:
      - image: "cimg/base:stable" 
    steps:
      - node/install # install npm
      - checkout #checkout the code
      - aws-cli/install #install aws cli
      - run:
          name: build frontend
          command: |
            npm run install:frontend
            npm run build:frontend
      - run:
          name: deploy frontend
          # copy the files that was build from angular build command and copy them to s3 that has static web hosting enabled
          command: |
            aws s3 cp --recursive --acl public-read ./udagram-frontend/www s3://udagram-front
                 
workflows:
  build_and_deploy:
    jobs:
      - udagram-api
      - udagram-frontend